/*
 * This source file was generated by the Gradle 'init' task
 */
package org.example

class App<T> {
  fun tellMeTheType(value: T) {
    println("The type of the value is:")

    when (value) {
      is String -> println("String")
      is Int -> println("Int")
      is Double -> println("Double")
      else -> println("Unknown")
    }
  }

  val greeting: String
    get() {
      return "Hello World!"
    }
}

class Pojo {
  var name: String = ""
  var age: Int = 0

  override fun equals(other: Any?): Boolean {
    if (this === other) return true
    if (other == null || javaClass != other.javaClass) return false

    other as Pojo

    if (name != other.name) return false
    if (age != other.age) return false

    return true
  }
}

data class DataPojo(var name: String, var age: Int)

val Pojo.greeting: String
  get() {
    return "Hello, $name"
  }

val String.greeting: String
  get() {
    return "Hello, $this"
  }

fun main() {
  val app = App<String>()
  app.tellMeTheType("Hello World!")

  val app2 = App<Int>()
  app2.tellMeTheType(42)

  val app3 = App<Double>()
  app3.tellMeTheType(3.14)

  val app4 = App<Boolean>()
  app4.tellMeTheType(true)

  val pojo = Pojo()
  pojo.name = "John Doe"
  pojo.age = 42

  val pojo2 = Pojo()
  pojo2.name = "John Doe"
  pojo2.age = 42

  println(pojo.greeting)

  val hello = "abc"
  println(hello.greeting)

  println("Name: ${pojo.name}, Age: ${pojo.age}")
  println(pojo.equals(pojo2))
}
